Rprof(NULL)
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
size(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),prob =c(0.3,0.7) )
flips <- sample(c(0,1),100,replace = TRUE, prob =c(0.3,0.7) )
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2 <- rbinom(100,size = 100,prod=0.7)
flips2 <- rbinom(100,size = 100,prob=0.7)
flips2 <- rbinom(100,size = 100,prob=0.7)
flips2 <- rbinom(100,size = 1,prob=0.7)
flips2
sum(flips2)
rnorm
?rnorm
rnorm(10)
rnorm(10,mean = 100,sd=25)
?rpois
rpois(5)
rpois(5,1)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab = "Speed")
plot(x=cars$speed,y=cars$dist,ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab = "Speed",ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$speed,main = "My plot")
plot(cars,main = "My plot")
plot(cars, main = "My Plot")
?plot
plot(cars, sub="My Plot Subtitle")
plot(cars, col(2))
plot(cars, col="2")
plot(cars, col=2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula(mpg~cyl),mtcars)
(formula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library("swirl")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,contry)
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time
)
-5:20
-(5:20)
select(cran,X:size)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(3,5,NA,10)
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,r_version==!is.na(cran$r_version))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,desc(package),size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^10)
mutate(cran,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran, size_mb=size / 2^20, size_gb = size_mb / 2^10)
mutate(cran, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3,correct_size=1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarise(by_package,mean(size))
?n
submit()
submit("summarize1.R")
submit(summarize1.R)
submit()
submit()
pack_sum
quantile(pack_sum$count,probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<- filter(pack_sum,unique>465)
View(top_unique)
arrange(top_unique,desc(unique))
top_unique_sorted<- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<- gather(students2,sex_class,count)
res<- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex",class))
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
submit()
submit()
submit()
submit()
?spread
submit()
submit()
library(readr)
parse_numeric("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
View(failed)
failed
mutate(passed,status="passed")
passed <- passed %>% mutate(status="passed")
failed <- failed %>% mutate(status="failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
?select
?separate
submit()
?gather
View(sat)
View(sat)
submit()
submit()
0
# download data
if(!file.exists("./data")) dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/ACS.csv")
# load data into R
acs <- read.csv("./data/ACS.csv")
agricultureLogical <- (acs$ACR==3 & acs$AGS == 6)
which(agricultureLogical)[1:3]
# download fig
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "./data/jeff.jpg", mode = "wb")
# load fig into R
jeff <- readJPEG("./data/jeff.jpg", native = TRUE)
# result
quantile(jeff, probs = c(0.3, 0.8))
install.packages("jpeg")
# download fig
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "./data/jeff.jpg", mode = "wb")
# load fig into R
jeff <- readJPEG("./data/jeff.jpg", native = TRUE)
# result
quantile(jeff, probs = c(0.3, 0.8))
# download data
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "./data/GDP.csv")
download.file(fileUrl2, destfile = "./data/EDU.csv")
# load data into R
gdp <- read.csv("./data/GDP.csv", skip = 4, nrow = 190, stringsAsFactors = FALSE)[,c(1, 2, 4, 5)]
colnames(gdp) = c("CountryCode", "Ranking", "Economy", "GDP")
edu <- read.csv("./data/EDU.csv", stringsAsFactors = FALSE)
# merge data
mergeData <- merge(gdp, edu, by = "CountryCode")
# result 1
nrow(mergeData)
# result 2
library(dplyr)
arrangeData <- arrange(mergeData, desc(Ranking))
arrangeData[13, "Economy"]
# group data
by_income <- group_by(mergeData, as.factor(Income.Group))
# result
summarise(by_income, meanRank = mean(Ranking))
# cut data into 5 groups
library(Hmisc)
mergeData$GDP <- cut2(mergeData$Ranking, g = 5)
table(mergeData$GDP, mergeData$Income.Group)
install.packages("hmisc")
# cut data into 5 groups
library(Hmisc)
mergeData$GDP <- cut2(mergeData$Ranking, g = 5)
table(mergeData$GDP, mergeData$Income.Group)
install.packages("Hmisc")
# cut data into 5 groups
library(Hmisc)
mergeData$GDP <- cut2(mergeData$Ranking, g = 5)
table(mergeData$GDP, mergeData$Income.Group)
library("swirl")
swirl()
library("swirl")
swirl()
0
type Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_daye<- ymd("1989-05-17")
my_daye
my_date<- ymd("1989-05-17")
my_date
rm(my_daye)
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12,1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19/20/12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
update(this_moment,hours=9,minutes=49)
update(this_moment,hours=10,minutes=16,seconds=0)
update(this_moment, hours=10, minutes=16, seconds=0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
info()
skip()
this_moment
?now
nyc<-now(tzone = "America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minute-34,second=0)
depart<-update(depart,hours=17,minute=34,second=0)
depart<-update(depart,hours=17,minute=34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long<-interval(last_time,this_day,tzone = attr(last_time,"Singapore"))
how_long<-interval(last_time,arrive,tzone = attr(last_time,"Singapore"))
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
# download data
if(!file.exists("./data")) dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/ACS.csv")
# load data into R
acs <- read.csv("./data/ACS.csv")
# split data name.
strsplit(names(acs), split = "wgtp")[[123]]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdp <- read.csv("./data/GDP.csv", skip = 4, nrows = 190, stringsAsFactors = FALSE)[,c(1, 2, 4, 5)]
colnames(gdp) = c("CountryCode", "Ranking", "Economy", "GDP")
obj <- gsub(",", "", gdp$GDP)
obj <- as.numeric(obj)
mean(obj, na.rm = TRUE)
grep("^United", gdp$Economy)
# download data
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "./data/GDP.csv")
download.file(fileUrl2, destfile = "./data/EDU.csv")
# load data into R
gdp <- read.csv("./data/GDP.csv", skip = 4, nrow = 190, stringsAsFactors = FALSE)[,c(1,2,4,5)]
colnames(gdp) = c("CountryCode", "Ranking", "Economy", "GDP")
edu <- read.csv("./data/EDU.csv")
# merge data
mergeData <- merge(gdp, edu, by = "CountryCode")
# result
indexFiscal <- grep("fiscal", tolower(mergeData$Special.Notes))
sum(grepl("june", tolower(mergeData$Special.Notes[indexFiscal])))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(TTR)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
# load data
library(lubridate)
library(quantmod)
amzn <- getSymbols("AMZN", auto.assign=FALSE)
sampleTimes <- index(amzn)
# result
index2012 <- grep("2012", sampleTimes)
length(index2012)
sum(grepl("Mon", wday(sampleTimes[index2012], label = TRUE)))
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/Assignment3/Getting-And-Clearning-Data-Assignment/run_analysis.R')
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/Assignment3/Getting-And-Clearning-Data-Assignment/run_analysis.R')
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/Assignment3/Getting-And-Clearning-Data-Assignment/run_analysis.R')
getwd()
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col = "blue")
abline(h=12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppn,col = "green")
hist(ppm,col = "green")
abline(v=12)
abline(v=12,lwd=2)
abline(v=12,col="magenta",lwd=4)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
reg
barplot(reg,col = "wheat",main = "Number of Counties in Each Region")
boxplot(pm25~region,col="red")
boxplot(pollution,pm25~region,col="red")
boxplot(data =  pollution,pm25~region,col="red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
a.
subset()
subset(pollution)
east <- subset(pollution,region=="east")
head(east)
hist(east,col = "green")
hist(east$pm25,col = "green")
hist(subset(pollution,region="west"$pm25,col = "green")
hist(subset(pollution,region="west"$pm25,col = "green")
hist(subset(pollution,region="west")$pm25,col = "green")
hist(subset(pollution,region=="west")$pm25,col = "green")
plot()
plot(pollution$latitude,pollution$pm25)
with(pollution, plot(latitude, pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col(pollution$region))
plot(pollution$latitude,pollution$pm25,col()=pollution$region)
0
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2),
| mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2),mar = c(5, 4, 2, 1))
west = subset(pollution,region="west")
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main = "West")
plot(east$latitude,east$pm25,main = "East")
library(swirl)
swirl()
0
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone,main = "Ozone and Wind in New York City"))
title(main="Ozone and Wind in New York City")
length(par())
with(par())
names(par())
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main = "Wind and Ozone in NYC")
l
subset(air\airquality)
subset(airquality)
may <- subset(airquality, Month==5)
?pch
plot(may$Wind,may$Ozone,pch=17,bg="blue")
plot(may$Wind,may$Ozone,pch=17,col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality,month!=5)
notmay <- subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
?legend
legend("topright",pch = c(17,8),col = c("blue","red"), c("May","Other Months"))
legend("topright",pch = c(17,8),col = c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
setwd("C:/Users/Min/Data-Science/datasciencecoursera/R assignment/ExData_Plotting1")
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/ExData_Plotting1/plot3.R')
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/ExData_Plotting1/plot4.R')
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/ExData_Plotting1/plot4.R')
source('C:/Users/Min/Data-Science/datasciencecoursera/R assignment/ExData_Plotting1/plot4.R')
